<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.miniui.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.example.miniui.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
<!--    <result column="queren" jdbcType="INTEGER" property="queren"/>-->
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.miniui.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (`name`, pwd)
    values (#{name,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.example.miniui.entity.User">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update user
    set `name` = #{name,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select id, `name`, pwd
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.String">
    select * from user where 1=1
    <if test="searchName!=null&amp;&amp;searchName!=&quot;&quot;">
      and `name` like CONCAT(CONCAT('%',#{searchName},'%'))
    </if>
    order by id
  </select>
  <select id="selectAllByPage" resultType="java.util.HashMap" parameterType="java.lang.String">
    select * from user where 1=1
    <if test="searchName!=null&amp;&amp;searchName!=&quot;&quot;">
      and `name` like CONCAT(CONCAT('%',#{searchName},'%'))
    </if>
    order by id
  </select>
  <select id="checkname" parameterType="com.example.miniui.entity.User" resultType="java.lang.Integer">
    select count(*) from user where `name`=#{name,jdbcType=VARCHAR}
  </select>
  <select id="checkid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(*) from user where id=#{id,jdbcType=INTEGER}
  </select>
  <select id="selectNTitle" parameterType="java.lang.Integer" resultType="java.util.Map">
    SELECT a.* from n_title a,`user` b WHERE a.uid=b.id AND b.id=#{id,jdbcType=INTEGER}
  </select>
  <select id="findExistIdexcptit" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select count(a.id) from user a where a.id in ( select b.id from user b where b.id in (select c.id from user c where c.id!=#{id,jdbcType=INTEGER}))
                                        and a.id=#{id,jdbcType=INTEGER}
  </select>
</mapper>